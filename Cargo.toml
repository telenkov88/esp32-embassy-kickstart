[package]
edition = "2021"
name    = "dual-core"
version = "0.1.0"
resolver = "2"

[package.metadata.espflash]
partition_table = "partitions.csv"

[[bin]]
name = "dual-core"
path = "./src/main.rs"
test = false
doctest = false
bench = false

[dependencies]
embassy-net = { version = "0.6.0", features = [
  "dhcpv4",
  "medium-ethernet",
  "tcp",
  "udp",
  "dns",
  "medium-ethernet",
  "proto-ipv4",
] }

esp-alloc = "0.7.0"
esp-hal = { version = "1.0.0-beta.0", features = ["esp32s3", "unstable"] }

embassy-executor = { version = "0.7.0", features = ["task-arena-size-131072"] }
embassy-time = { version = "0.4.0", features = ["generic-queue-8"] }
embassy-futures = {version = "0.1.1"}
esp-hal-embassy = { version = "0.7.0", features = ["esp32s3"] }
embassy-sync = "0.6.2"
esp-wifi = { version = "0.13.0", features = [
  "ble",
  "builtin-scheduler",
  "coex",
  "esp-alloc",
  "esp32s3",
  "log",
  "wifi",
] }
heapless = { version = "0.8.0", default-features = false }
static_cell = { version = "2.1.0", features = ["nightly"] }
esp-println = {version = "0.13.1", features = ["esp32s3", "log"]}
esp-backtrace = {version = "0.15.1", features = ["esp32s3", "exception-handler", "panic-handler", "println"]}

picoserve = { version = "0.15.1", features = ["embassy"] }

# HTTP
reqwless = { version = "0.13", default-features = false, features = ["alloc", "embedded-tls", "log"] }

# Neopixel
esp-hal-smartled = { git = "https://github.com/esp-rs/esp-hal-community", rev = "a613668" }
smart-leds = "0.4.0"

# Filesystem
esp-storage = {version = "0.5.0", features = ["esp32s3"]}
embedded-storage = { version = "0.3" }
esp-bootloader-esp-idf = { git = "https://github.com/esp-rs/esp-hal"}

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units    = 1     # LLVM can perform better optimizations using a single thread
debug            = 2
debug-assertions = false
incremental      = false
lto              = 'fat'
opt-level        = 's'
overflow-checks  = false


